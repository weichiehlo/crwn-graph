{"version":3,"sources":["components/form-input/form-input.styles.jsx","components/form-input/form-input.component.jsx","components/custom-button/custom-button.styles.jsx","components/custom-button/custom-button.component.jsx","components/sign-in/sign-in.styles.jsx","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.styles.jsx","components/sign-up/sign-up.component.jsx","pages/sign-in-and-sign-up/sign-in-and-sign-up.styles.jsx","pages/sign-in-and-sign-up/sign-in-and-sign-up.component.jsx"],"names":["shrinkLabelStyles","css","GroupContainer","styled","div","FormSelectContainer","Select","FormInputContainer","input","FormInputLabel","label","FormSelectLabel","FormInput","handleChange","props","onChange","className","value","length","FormSelect","buttonStyles","invertedButtonStyles","googleSignInStyles","CustomButtonContainer","button","isGoogleSignIn","inverted","CustomButton","children","SignInContainer","SignInTitle","h2","ButtonsBarContainer","connect","dispatch","googleSignInStart","emailSignInStart","email","password","useState","userCredentials","setCredentials","handleSubmit","event","a","preventDefault","target","name","onSubmit","type","required","onClick","SignUpContainer","SignUpTitle","signUpStart","displayName","confirmPassword","setUserCredentials","alert","SignInAndSignUpContainer","SignInAndSignUpPage"],"mappings":"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","file":"static/js/8.f72dc000.chunk.js","sourcesContent":["import styled, { css } from 'styled-components';\r\nimport Select from 'react-select'\r\n\r\nconst subColor = 'grey';\r\nconst mainColor = 'black';\r\n\r\nconst shrinkLabelStyles = css`\r\n  top: -14px;\r\n  font-size: 12px;\r\n  color: ${mainColor};\r\n`;\r\n\r\nexport const GroupContainer = styled.div`\r\n  position: relative;\r\n  margin: 45px 0 0 0;\r\n\r\n  input[type='password'] {\r\n    letter-spacing: 0.3em;\r\n  }\r\n`;\r\n\r\nexport const FormSelectContainer = styled(Select)`\r\n  background: none;\r\n  background-color: white;\r\n  color: ${subColor};\r\n  font-size: 18px;\r\n  padding: 10px 10px 10px 5px;\r\n  display: block;\r\n  width: 100%;\r\n  border: none;\r\n  border-radius: 0;\r\n  min-width: 200px;\r\n`;\r\n\r\nexport const FormInputContainer = styled.input`\r\n  background: none;\r\n  background-color: white;\r\n  color: ${subColor};\r\n  font-size: 18px;\r\n  padding: 10px 10px 10px 5px;\r\n  display: block;\r\n  width: 100%;\r\n  border: none;\r\n  border-radius: 0;\r\n  border-bottom: 1px solid ${subColor};\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &:focus ~ label {\r\n    ${shrinkLabelStyles}\r\n  }\r\n`;\r\n\r\nexport const FormInputLabel = styled.label`\r\n  color: ${subColor};\r\n  font-size: 16px;\r\n  font-weight: normal;\r\n  position: absolute;\r\n  pointer-events: none;\r\n  left: 5px;\r\n  top: 10px;\r\n  transition: 300ms ease all;\r\n\r\n  &.shrink {\r\n    ${shrinkLabelStyles}\r\n  }\r\n`;\r\n\r\nexport const FormSelectLabel = styled.label`\r\n  color: ${subColor};\r\n  font-size: 16px;\r\n  font-weight: normal;\r\n  pointer-events: none;\r\n  left: 5px;\r\n  top: 10px;\r\n  transition: 300ms ease all;\r\n\r\n`;\r\n\r\n","import React from 'react';\r\n\r\nimport {\r\n  GroupContainer,\r\n  FormInputContainer,\r\n  FormInputLabel,\r\n  FormSelectContainer,\r\n  FormSelectLabel\r\n} from './form-input.styles';\r\n\r\nexport const FormInput = ({ handleChange, label, ...props }) => (\r\n  <GroupContainer>\r\n    <FormInputContainer onChange={handleChange} {...props} />\r\n    {label ? (\r\n      <FormInputLabel className={props.value.length ? 'shrink' : ''}>\r\n        {label}\r\n      </FormInputLabel>\r\n    ) : null}\r\n  </GroupContainer>\r\n);\r\n\r\nexport const FormSelect = ({ handleChange, label, ...props }) => (\r\n  <GroupContainer>\r\n    {label ? (\r\n      <FormSelectLabel>\r\n        {label}\r\n      </FormSelectLabel>\r\n    ) : null}\r\n    <FormSelectContainer onChange={handleChange} {...props} />\r\n  </GroupContainer>\r\n);\r\n\r\n\r\n\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst buttonStyles = css`\r\n  background-color: black;\r\n  color: white;\r\n  border: none;\r\n\r\n  &:hover {\r\n    background-color: white;\r\n    color: black;\r\n    border: 1px solid black;\r\n  }\r\n`;\r\n\r\nconst invertedButtonStyles = css`\r\n  background-color: white;\r\n  color: black;\r\n  border: 1px solid black;\r\n\r\n  &:hover {\r\n    background-color: black;\r\n    color: white;\r\n    border: none;\r\n  }\r\n`;\r\n\r\nconst googleSignInStyles = css`\r\n  background-color: #4285f4;\r\n  color: white;\r\n\r\n  &:hover {\r\n    background-color: #357ae8;\r\n    border: none;\r\n  }\r\n`;\r\n\r\nconst getButtonStyles = props => {\r\n  if (props.isGoogleSignIn) {\r\n    return googleSignInStyles;\r\n  }\r\n\r\n  return props.inverted ? invertedButtonStyles : buttonStyles;\r\n};\r\n\r\nexport const CustomButtonContainer = styled.button`\r\n  min-width: 165px;\r\n  width: auto;\r\n  height: 50px;\r\n  letter-spacing: 0.5px;\r\n  line-height: 50px;\r\n  padding: 0 35px 0 35px;\r\n  font-size: 15px;\r\n  text-transform: uppercase;\r\n  font-family: 'Open Sans Condensed';\r\n  font-weight: bolder;\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  ${getButtonStyles}\r\n`;\r\n","import React from 'react';\r\n\r\nimport { CustomButtonContainer } from './custom-button.styles';\r\n\r\nconst CustomButton = ({ children, ...props }) => (\r\n  <CustomButtonContainer {...props}>{children}</CustomButtonContainer>\r\n);\r\n\r\nexport default CustomButton;\r\n","import styled from 'styled-components';\r\n\r\nexport const SignInContainer = styled.div`\r\n  width: 380px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const SignInTitle = styled.h2`\r\n  margin: 10px 0;\r\n`;\r\n\r\nexport const ButtonsBarContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {FormInput} from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport {\r\n  googleSignInStart,\r\n  emailSignInStart\r\n} from '../../redux/user/user.actions';\r\n\r\nimport {\r\n  SignInContainer,\r\n  SignInTitle,\r\n  ButtonsBarContainer\r\n} from './sign-in.styles';\r\n\r\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\r\n  const [userCredentials, setCredentials] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  const { email, password } = userCredentials;\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    emailSignInStart(email, password);\r\n  };\r\n\r\n  const handleChange = event => {\r\n    const { value, name } = event.target;\r\n\r\n    setCredentials({ ...userCredentials, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <SignInContainer>\r\n      <SignInTitle>I already have an account</SignInTitle>\r\n      <span>Sign in with your email and password</span>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <FormInput\r\n          name='email'\r\n          type='email'\r\n          handleChange={handleChange}\r\n          value={email}\r\n          label='email'\r\n          required\r\n        />\r\n        <FormInput\r\n          name='password'\r\n          type='password'\r\n          value={password}\r\n          handleChange={handleChange}\r\n          label='password'\r\n          required\r\n        />\r\n        <ButtonsBarContainer>\r\n          <CustomButton type='submit'> Sign in </CustomButton>\r\n          <CustomButton\r\n            type='button'\r\n            onClick={googleSignInStart}\r\n            isGoogleSignIn\r\n          >\r\n            Sign in with Google\r\n          </CustomButton>\r\n        </ButtonsBarContainer>\r\n      </form>\r\n    </SignInContainer>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  googleSignInStart: () => dispatch(googleSignInStart()),\r\n  emailSignInStart: (email, password) =>\r\n    dispatch(emailSignInStart({ email, password }))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(SignIn);\r\n","import styled from 'styled-components';\r\n\r\nexport const SignUpContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 380px;\r\n`;\r\n\r\nexport const SignUpTitle = styled.h2`\r\n  margin: 10px 0;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {FormInput} from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport { signUpStart } from '../../redux/user/user.actions';\r\n\r\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles';\r\n\r\nconst SignUp = ({ signUpStart }) => {\r\n  const [userCredentials, setUserCredentials] = useState({\r\n    displayName: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n  });\r\n\r\n  const { displayName, email, password, confirmPassword } = userCredentials;\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      alert(\"passwords don't match\");\r\n      return;\r\n    }\r\n\r\n    signUpStart({ displayName, email, password });\r\n  };\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    setUserCredentials({ ...userCredentials, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <SignUpContainer>\r\n      <SignUpTitle>I do not have a account</SignUpTitle>\r\n      <span>Sign up with your email and password</span>\r\n      <form onSubmit={handleSubmit}>\r\n        <FormInput\r\n          type='text'\r\n          name='displayName'\r\n          value={displayName}\r\n          onChange={handleChange}\r\n          label='Display Name'\r\n          required\r\n        />\r\n        <FormInput\r\n          type='email'\r\n          name='email'\r\n          value={email}\r\n          onChange={handleChange}\r\n          label='Email'\r\n          required\r\n        />\r\n        <FormInput\r\n          type='password'\r\n          name='password'\r\n          value={password}\r\n          onChange={handleChange}\r\n          label='Password'\r\n          required\r\n        />\r\n        <FormInput\r\n          type='password'\r\n          name='confirmPassword'\r\n          value={confirmPassword}\r\n          onChange={handleChange}\r\n          label='Confirm Password'\r\n          required\r\n        />\r\n        <CustomButton type='submit'>SIGN UP</CustomButton>\r\n      </form>\r\n    </SignUpContainer>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(SignUp);\r\n","import styled from 'styled-components';\r\n\r\nexport const SignInAndSignUpContainer = styled.div`\r\n  width: 850px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 30px auto;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    flex-direction: column;\r\n    width: unset;\r\n    align-items: center;\r\n\r\n    > *:first-child {\r\n      margin-bottom: 50px;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport SignIn from '../../components/sign-in/sign-in.component';\r\nimport SignUp from '../../components/sign-up/sign-up.component';\r\n\r\nimport { SignInAndSignUpContainer } from './sign-in-and-sign-up.styles';\r\n\r\nconst SignInAndSignUpPage = () => (\r\n  <SignInAndSignUpContainer>\r\n    <SignIn />\r\n    <SignUp />\r\n  </SignInAndSignUpContainer>\r\n);\r\n\r\nexport default SignInAndSignUpPage;\r\n"],"sourceRoot":""}